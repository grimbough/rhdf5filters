on:
  push:
    branches:
      - master
      - arch-checks
  pull_request:
    branches:
      - master

name: ARM64 R-CMD-check 

jobs:
  R-CMD-check:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64
          
      - name: Set R options and make default library location
        run: |
          mkdir -p /home/runner/work/_temp/_github_home/r_library
          echo "options(Ncpus = 2)" > /home/runner/work/_temp/_github_home/.Rprofile
          echo "R_LIBS=\${HOME}/r_library:\${R_LIBS}" > /home/runner/work/_temp/_github_home/.Renviron
        
      - name: Cache R packages
        uses: actions/cache@v2
        env:
          cache-name: RELEASE_3_12_packages
        with:
          path: /home/runner/work/_temp/_github_home/r_library
          key: arm64-build-${{ env.cache-name }}
          
      - name: test
        uses: docker://arm64v8/r-base:latest
        with:
          args: >
            bash -c "echo $HOME && ls /github/home/"
          
      - name: test 2
        uses: docker://arm64v8/r-base:latest
        with:
          args: >
            Rscript -e ".libPaths()"

      # - name: Install R packages
      #   uses: docker://arm64v8/r-base:latest
      #   with:
      #     args: >
      #       Rscript -e "install.packages(c('BiocManager', 'remotes', 'rcmdcheck'))" -e "BiocManager::install(upgrade = TRUE, ask = FALSE)"
      #       
      # - name: Install dependencies
      #   uses: docker://arm64v8/r-base:latest
      #   with:
      #     args: >
      #       Rscript -e "toInstall <- remotes::dev_package_deps(dependencies = TRUE)[,'package']" -e  "toInstall <- setdiff(toInstall, installed.packages()[,'Package'])" -e "if(length(toInstall)) { BiocManager::install(toInstall, ask = FALSE) }"
      #       
      # - name: Check package
      #   uses: docker://arm64v8/r-base:latest
      #   with:
      #     args: >
      #       Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual'), error_on = 'warning', check_dir = 'check')"     
      # 
      #       
